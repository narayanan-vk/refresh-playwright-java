name: Playwright Tests
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      browser:
        description: 'Browser to run tests on'
        required: true
        default: 'chromium'
        type: choice
        options: [chromium, firefox, webkit]
      tags:
        description: 'Test tags to run'
        required: true
        default: 'UI'
        type: choice
        options: [UI, Smoke, Regression, API, Performance, P1, P2]
      trace:
        description: 'Recording a trace'
        required: true
        default: 'RETAIN_ON_FAILURE'
        type: choice
        options: [ ON, OFF, RETAIN_ON_FAILURE ]
jobs:
  run-playwright-tests:
    name: 'Playwright Tests - (Shard ${{ matrix.shardIndex }} of ${{ matrix.shardTotal }})'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shardIndex: [0, 1, 2]
        shartTotal: [3]
    container:
      image: mcr.microsoft.com/playwright/java:v1.51.0-noble
      options: --user 1001
    steps:
      - uses: actions/checkout@v4

      - name: Run tests
        id: run_tests
        continue-on-error: true
        run: mvn test -DshardIndex=${{ matrix.shardIndex }} -DshardTotal=${{ matrix.shardTotal }} -Dgroups="${TEST_TAGS}"
        env:
          TEST_BROWSER: ${{ github.event.inputs.browser }}
          TEST_HEADLESS: "true"
          TEST_CI: "true"
          TEST_TAGS: ${{ github.event.inputs.tags }}
          TEST_TRACE: ${{ github.event.inputs.trace }}

      - name: Upload Allure Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-shard-${{ matrix.shardIndex }}
          path: target/allure-results/
          retention-days: 7

      - name: Check overall test run result
        if: steps.run_tests.outcome == 'failure'
        run: exit 1

  merge-reports:
    name: 'Merge Test Reports'
    needs: run-playwright-tests
    if: always()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Create merged results directory
        run: mkdir -p target/allure-results

      - name: Download all test results
        uses: actions/download-artifact@v4
        with:
          pattern: allure-results-shard-*
          path: downloaded-results
          merge-multiple: true

      - name: Merge results
        run: |
          find downloaded-results -type f -name "*.json" -o -name "*.xml" | xargs -I{} cp {} target/allure-results/

      - name: Upload merged results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: target/allure-results/
          retention-days: 7


  publish-allure-report:
    name: 'Publish Allure Report'
    needs: run-playwright-tests
    if: always()
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Download test results
        uses: actions/download-artifact@v4
        with:
          name: allure-results
          path: target/allure-results

      - name: Get Allure history
        uses: actions/checkout@v4
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Allure Report action from marketplace
        uses: simple-elf/allure-report-action@v1.12
        id: allure-report
        if: always()
        with:
          gh_pages: gh-pages
          allure_history: allure-history
          allure_report: allure-report
          allure_results: target/allure-results

      - name: Publish test report
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history

      - name: Set report URL as output, annotation and to job summary
        if: always()
        id: set_url
        run: |
          REPORT_URL="https://narayanan-vk.github.io/refresh-playwright-java/${{ github.run_number }}/"
          echo "report_url=$REPORT_URL" >> $GITHUB_OUTPUT
          echo "::notice title=Test Report Available::View the full test report at $REPORT_URL"
          echo "## 📊 Test Report" >> $GITHUB_STEP_SUMMARY
          echo "📝 [View Full Test Report]($REPORT_URL)" >> $GITHUB_STEP_SUMMARY


